<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开源之道</title>
    <link>http://www.ocselected.org/topics/</link>
    <description>Recent content on 开源之道</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2019, 适兕; all rights reserved.</copyright>
    <lastBuildDate>Sun, 25 Dec 2016 11:49:36 +0800</lastBuildDate>
    
	<atom:link href="http://www.ocselected.org/topics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>探索红帽商业模式最初的灵感来源</title>
      <link>http://www.ocselected.org/posts/open_source_history_teaches_us/</link>
      <pubDate>Sun, 25 Dec 2016 11:49:36 +0800</pubDate>
      
      <guid>http://www.ocselected.org/posts/open_source_history_teaches_us/</guid>
      <description>自由软件运动，和其它社会运动类似：一群具有远见的精英，意识到了被某种强大力量所控制，继而开启革命的旅程，最后将大众解放。
美国的独立战争也是同样的路数。精英们不再想让自己继续被大英帝国所奴役，他们渴望独立与自由，于是开始组建自己的政府、军队，创立属于自己的独特文化。革命者的方法看起来有些混乱和简单粗暴,但这并不能妨碍其最后的成功。这和自由软件运动几乎是同出一辙。
自由软件运动对于今天的企业组织影响是至为深远的，无论它属于那一个行业。
以下我们来解释一下为什么会有如此一说。
自由软件运动、Linux的历史 回顾自由软件运动，得将时间扳回到 1968年，那一年，是 Unix 操作系统的诞生之年，那一年，留着长发、蓄着大胡子、戴着厚厚的眼镜片的 Ken Thompson 缔造了Unix。
Thompson 在撰写Unix 的时候，还在为Bell实验室工作，所以在整个70年代都是由Bell实验室来分发Unix的源代码的，那时来自世界各地的研究实验室、大学、和计算机科学家都在为 Unix 贡献代码。Unix 曾经是“自由的”软件，任何组织需要都是可以采用的。
到1979年Bell实验室归 AT&amp;amp;T 所有了，将Unix申明为其版权所有，人们若要访问源代码的话，就需要付费给 AT&amp;amp;T。
程序员们开始不乐意了，Unix 曾经是他们协作的成果，他们认为至少Unix应该对他们保持“免费”和可获取，毕竟他们帮助了Unix的成长和发展。
这时，英雄出现了。来自 MIT 的研究员 Richard Stallman 站了出来，这是一名具有嬉皮士风格的人，触动他的是他和同事索要打印机驱动程序的源代码时遭到了拒绝，他认为软件应该是自由的，从那以后，Stallman将自由软件的理念发展成为了自己的使命，也成了这一运动的领军人物。在1985年更是创立了自由软件基金会，地点设在波士顿，活动至今。
Stallman 和其他程序员开始撰写代码用来替代 Unix，这些项目称之为“GNU”（即“GNU is not Unix”的简称），他们分发的项目使用“copyleft”——和“copyright”对着干的用词。Copyleft 鼓励用户去更改现有的代码，并可以公开的保留，来自全世界的计算机开发者协作来开发GNU和其它自由软件项目。
商业软件公司，诸如微软、IBM也开发了自己的商用操作系统来和Unix竞争。但是这些操作系统并不提供让用户能够自己修改，而且也不会让用户去自行进行构建版本。
在整个80年代，自由软件开发者们不懈的努力去开发一个更好的操作系统，但是一直都缺少一个非常关键的因素：“统一的内核”，内核是管理硬件设备和为应用程序提供良好接口的关键核心程序。
在1991年因为一个个人的项目才改变了这样的局面，仅仅只有21岁的芬兰籍大学生——Linus Torvalds，创立了内核的项目，随后他以GPL协议发布了源代码，并命名为“Linux”，开发者们开始将内核和已有的GNU项目融合起来，这就是现在我们一直沿用的Linux操作系统，完整的名称应是：GNU／Linux。
从那以后，Linux的开发成爆发式的增长，(Under the radar也是红帽联合创始人Bob Young出版的书籍。)一些极客和电脑发烧友开始对他情有独钟，他们通过解决彼此的问题而一起协作，举例来说，大学的教授为了完成研究而协作编程，可有效降低成本，他们通过创建新的程序和修复漏洞来改进Linux。
一些早期的Linux开发者来自于哪些大公司，但是他们的上司却对他们的这些工作视而不见，偶尔也会有一些颇有经济头脑的高管注意到“自由软件”，但是他们不知道该如何处理，因为对于他们来说Linux完全是陌生的，过于深奥和难于理解。通常他们认为仅仅是“研究和开发”罢了，完全视而不见。
发现洞见 1992年，那时还很不起眼的创业者 Bob Young 卖掉了电脑业务，开始发行杂志《Linux Journal》，Bob 并不会撰写程序，但是在当时，他是少数意识到 Linux 的快速发展而会带来商机的人之一。
Bob 谈道：“当时，那些在加州大型杂志社工作的人们完全忽视Linux的存在，在今天看来，他们也意识到了这点，一如我在92年看到Linux时想到的‘这就是方向’”。
Bob 以为那些为 Linux 作贡献的程序员们是可以在自己所在的公司受益的。
Bob 继续谈到“当我问到这些开发者们，这些自由软件是如何生产的，他们通常会这么回到‘你知道，这些都来自与工程师们自身的需要和技能展现。’”
太好了，这点得感谢卡尔马克思。
“我认为，‘协作模式不生效，我们所有人都是利他主义的，这一点是我们作为人类非常重要的一部分，但是在跨企业用户来部署复杂的技术的话，利他主义是行不通的。’”Bob 谈道，“企业都有一套自己的激励法则，他们需要知道自己1-800个数字背后是部署了什么，如果人们要继续工作的话公司还要付钱给他们。” 你要知道，Linux、GNU的背后是没有任何公司为这些人们付费的。
“所以，我一下子就明白了，在92年的时候，我就知道这是一次干翻IBM的 OS 2、微软的Windows NT、或者是其它商业的Unix的绝佳机会！ ” Bob 如此说道“我想这将会是一次非常好的试验旅程，一次让这些Hacker找到乐趣的事情，毕竟微软刚刚在这方面获得了成功。”</description>
    </item>
    
  </channel>
</rss>