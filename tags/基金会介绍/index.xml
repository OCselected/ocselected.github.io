<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>基金会介绍 on 开源之道</title>
    <link>http://www.opensourceway.community/tags/%E5%9F%BA%E9%87%91%E4%BC%9A%E4%BB%8B%E7%BB%8D/</link>
    <description>Recent content in 基金会介绍 on 开源之道</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2016 - 2020, 适兕; all rights reserved.</copyright>
    <lastBuildDate>Fri, 20 Mar 2020 20:31:22 +0800</lastBuildDate>
    
	<atom:link href="http://www.opensourceway.community/tags/%E5%9F%BA%E9%87%91%E4%BC%9A%E4%BB%8B%E7%BB%8D/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Debian 为什么没有成立非营利基金会？</title>
      <link>http://www.opensourceway.community/posts/foundation_introduce/how-debian-growing-without-foundation/</link>
      <pubDate>Fri, 20 Mar 2020 20:31:22 +0800</pubDate>
      
      <guid>http://www.opensourceway.community/posts/foundation_introduce/how-debian-growing-without-foundation/</guid>
      <description>Debian 简介 Debian 是一款非常流行的Linux 发行版，好不谦逊的说，从技术上讲，Debian 包揽了排名前五的所有的版本，因为另外4个版本都是从[Debian系列]()的，如Ubuntu、Mint。这么说的话：
 Debian 是世界上最受欢迎的Linux发行版。
 没有任何毛病。
关于 Linux 发行版的信息，我们以下图为例可以说明一下 Debian的重要性：
Debian 以其稳定精干的形象闻名于世，坚持以自由软件为选择的基调，拥泵无数。支持数十种处理器架构，而且根据不同的内核，整合了数个版本，当然基于Linux kernel 的发行版是最为受欢迎的，其也是GNU Hurd的忠实追随者。
熟悉Linux 发行版的读者，肯定明白发行版之间最大的不同在于其包管理器的异同，Debian 的dpkg、apt就是其特色的包管理器，也是区别于rpm、port等包管理器的发行版的明显特点。
Debian的版本号也是非常的有特色，它采用的是“玩具总动员”中角色的名称来命名各个发行版的，另外一个始终如一的版本是“sid”，意即不稳定的版本，而sid这个名称在玩具总动员中是一名破坏玩具的角色。
Debian 是相当迷人的，其共同体也是相当的有特色，这也是本文介绍的重点，使用Debian的同学，一般都具有非常高的忠诚度，当然更多的是有归属感的，常常引以自豪！
当然，Debian最为突出的特点，就是该项目是完全由共同体驱动的，背后没有任何的商业公司，如红帽之于Fedora、SUSE之于Open SUSE。这是令常人非常惊讶的一点：实际上最流行的Linux发行版，是完全由共同体驱动的！来，感受一下。
Debian 的历史故事 Debian 是最早期的Linux发行版之一，其起源要追溯到1993年，当时最流行的发行版叫做：SLS，基于 Slackware，Ian Murdock 也是 SLS 的用户，但是他对于这个版本越来越不满，尤其是在bug的修复上，以及糟糕的包管理器，于是在1993.8.16发起了 Debian 项目，Debian 这个名词也是非常的浪漫，Deb 来自于Ian Murdock 当时的女朋友：Debra Lynn ，后半段 ian 当然来自于他自己的名字 Ian Murdock。
过了差不多一个多月，Debian 发布了其第一个内部版本：0.0.1，其首个公开版本是0.0.9, 这个版本颇具特色的一点在于，不仅包含了可以运行的操作系统发行版，还包括了Debian Linux 宣言，以及Murdock对于一个操作系统的理解，其呼吁 Debian 是为了发扬 GNU 和Linux的自由精神而创建！
在1994年到1995年，Debian 发布了0.9.x若干个版本，同时这个时间段，也获得了自由软件基金会的资助，在此期间，Ian Murdock 将基础系统（Debian的核心软件包）交给了 Bruce Perens，自己则专注于包管理器的开发上，并在1996年发布1.x版本，同年，Bruce Perens 接管了项目的领导者，他还起草了Debian社会契约和Debian自由软件指南，在Debian 发布1.2版本时，Debian的志愿者达到了200多位，此时已经是2年后了，Perens 在1998年卸任了Debian领导者。
1998年 Debian 领导者的接替者是 Ian Jackson，这个期间，Debian 2.</description>
    </item>
    
    <item>
      <title>以法律的名义捍卫自由软件的权益之二 —— 软件自由法律中心（SFLC）的来龙去脉</title>
      <link>http://www.opensourceway.community/posts/foundation_introduce/introduction_of_software_freedom_law_center/</link>
      <pubDate>Thu, 12 Mar 2020 16:46:06 +0800</pubDate>
      
      <guid>http://www.opensourceway.community/posts/foundation_introduce/introduction_of_software_freedom_law_center/</guid>
      <description>在介绍完成以法律的名义捍卫自由软件的权益之一 —— 软件自由保护组织（SFC）的来龙去脉，笔者觉得有点不足的地方，尽管基本上将 SFC 做什么，什么时候开始做的，现在的状态如何等等说清楚了，但是仍然希望再往前追溯一些，希望能够将SFC 之所以能够存在的内在机理挖掘一番。当然，如果能够给本土的读者提醒一下，基金会不是解决问题的唯一方式，甚至不是最好的方式，应该还有更好的方式去探索：法律的遵守和执行、重获个人的信任、关系和空间的构建&amp;hellip;&amp;hellip;
自由软件基金会 谈到非营利软件基金会，自由软件基金会（FSF）算是鼻祖了，不过说起它的成立，还要提及另外一件事。
自由软件运动 我们要追溯到上实际6、70年代，在麻省理工的麻省理工的最后一个黑客搬走的时候，在《黑客：计算机革命的英雄》一书中，对于Richard Stallman 有如此的一段描述：
 这是人类最后的归宿，正如斯托曼自己所言：”我就是垂死的黑客文化的唯一幸存者，我并不真正属于这个世界，在某种程度上，我觉得我也应该去世了。”所有的信息都应该可以自由获取，这样的描述大概是计算机的天堂，如果有的话。
 正如开源之道所倡导的“观念改变行动”一样，就是 Richard Stallman 的信念决定了其随后的行动，如果说黑客文化的衰落，仅仅停留在哀叹昔日荣光不再的话，那么就没有后面的故事了，或许仅仅看起来只是一件毋须斤斤计较的小事，但足以改变一个人的未来走向，乃至影响整个世界。
所有的人，可能都听说过 Richard Stallman 关于施乐打印机的故事，我们不妨引用一段《Free As in Freedom》这本书里的一个故事：
 当年还仅有27岁的 Richar M. Stallman 还是麻省理工学院人工智能实验室的一名程序员。Xerox 公司为实验室捐赠了一台激光打印机，但是打印机经常卡纸，给多个使用带来了很大的不变，作为遵守Hacker伦理的一员有一条铁律：“从头开发一个软件只是小儿科；改进一个程序才显真本事。”但是，这台机器不提供任何的软件源代码，于是 Stallman 就像往常一样（Hacker伦理）径直去找打印机项目的教授去索取，但是被拒绝了，理由是教授和Xerox 签订了保密协议。这可把Stallman给气坏了。
二十多年过去了，Stallman 当初的怨气还在。他甚至把这个事件描述为人生的转折点。然而，那之后几个月中，在人工智能实验室以及 Stallman 身上发生的各种事，却比这次打印机事件还令人难以接受。Stallman，本是一名孤独的Hacker，本能地对绝对权威存有戒心。在经历了这一系列事件后，他变成了一位斗士，把传统的自由、平等、博爱的精神引入软件开发领域。而这次的打印机事件，在其一生的无数事件中则最值得一书。
“它让我思考了一些脑海中由来已久的问题，”Stallman说，“我以前有过一些初步的想法，认为软件本该共享。可当时还不知道怎么表述，那时的想法还没有清晰到可以用简单几句话给别人介绍。”
尽管之前也有过类似的不快经历，可这次的打印机事件彻底让斯托曼意识到，这一系列的是件，正悄悄地侵蚀自己所珍视的文化—— 那个神圣不可侵犯的小圈子。作为一名世界顶级研究机构的顶级程序员，Stallman 之前一直都无视那些程序员同行所作的各种妥协让步，因为他们还不至于影响到Stallman的工作。而如今Xerox激光打印机的到来，让Stallman开始注意到其他计算机用户一直忍受的程序和机器。这些程序很少能影响到人工智能实验室，Stallman和实验室的成员之前一直都可以自由地重写软件，添加功能。直到有一天，人工智能实验室把一台计算机的操作系统从不相容分时系统换成了商业的TOPS 20系统，这些就再也无法实现了。
如今，这台激光打印机已经强势入驻到人工智能实验室了，而外面的世界也悄悄发生了变化。除了偶尔卡纸以外，打印机工作还算正常。可是按照个人喜好修改软件则是不可能的了。从软件业的角度看，这台打印机的出现是个信号，预示着软件是公司的重要财产。谁也不会再想发布软件源代码，因为这可能会给潜在竞争对手机会，让他们可以轻松仿造自己的产品。而在Stallman看来，这台打印机简直就是一个卧底，十来年的不断尝试，私有软件终于还是在人工智能实验室中占得了一角。私有软件，也就是专有软件，被精心打扮为免费的礼物，潜入到Hacker的核心，无声无息。
Xerox 公司后来还发出了邀请，让一些程序员再使用他们的产品。Stallman 说，要是再早几年，他没准也无法拒绝这种免费的午餐。是那次打印机事件，让Stallman建立起了道德防线。它不仅给了Stallman足够的怒火去对以后的各种礼品心存戒备，更让Stallman开始思考一个让他自己也坐立不安的问题：要是以后哪个Hacker同行进到自己的办公室，向他索要代码，他究竟会不会拒绝复制代码呢？
这是我第一次碰上这种保密协议，它很快让我明白，保密协议面前，总会有无辜的受害者“，Stallman坚定地说，“在打印机事件中，我和整个人工智能实验室扮演了受害者的角色。”
Stallman 带着这种态度，经历了动荡的20世纪80年代。在这期间，麻省理工学院的同事们纷纷离开实验室，走进公司，签署了保密协议。大多数保密协议都有解密时间，而这则成了很多Hacker们的借口。他们会辩解说：软件迟早会成为公共资源。而保证软件在早期的开发阶段不被泄露，则可以保证让各位Hacker们可以进入顶尖项目中工作。这些借口，在Stallman看来，则是迈向深渊的第一步。
拒绝提供源代码，在Stallman看来，不仅违背了第二次世界大战以来深深植入软件开发中的科学精神，更违背了“己所不欲勿施于人”（dictate to do unto others as you would have them do unto you.）的道德准则。
打印机事件的重要意义恰在于此。正如Stallman所言，倘若没有这次事件，他的人生也许就会落入平常，纠结着，一边开发专有软件，一边痛苦地编写没人会看到的代码。当然也不会有着如今清晰的思路，更不会去解决别人从未想过的各种问题。最重要的，他心中也不会再有那份不平，推动着他去追求他的政治理想和道德信仰。
”从那日起，我决定绝不参与其中“谈起软件保密协议和类似的事情，Stallman
 这件事彻底激怒了 Richard Stallman，于是一场轰轰烈烈的开源软件运动就被开启了，既然是一场社会运动，不能是光喊喊口号，写几篇文章了事的，是需要拿出实际的能够让社会正常运转的产品和创造力的，GNU 项目诞生了！那时1983年的事情了，然后是GPL 的开发与完善，但是运动是需要钱的资助的，于是Richard Stallman 在1985年建立了自由软件基金会，并担任主席。</description>
    </item>
    
    <item>
      <title>以法律的名义捍卫自由软件的权益之一 —— 软件自由保护组织（SFC）的来龙去脉</title>
      <link>http://www.opensourceway.community/posts/foundation_introduce/introduction_of_software_freedom_conservancy/</link>
      <pubDate>Mon, 09 Mar 2020 18:58:12 +0800</pubDate>
      
      <guid>http://www.opensourceway.community/posts/foundation_introduce/introduction_of_software_freedom_conservancy/</guid>
      <description>违反GPL？来，我们法庭见！ 中国 GPL 诉讼第一案 2019年12月，中国 GPL 诉讼第一案：关于 GPL 问题的探讨终于算是尘埃落定。这对于很多开源圈内的律师、相关人员是蛮开眼界的，要知道，GPL 已经将近三十多年的历史了，在盗版横行的中国，却仅仅才发生了一次诉讼！简直是苍天有眼啊！自由/开源软件似乎有了曙光的感觉。
不过等等，文中的原告和被告竟然是：
 数字天堂（北京）网络技术有限公司（下称：数字天堂）诉柚子（北京）科技有限公司、柚子（北京）移动技术有限公司（下称：两柚子）侵犯计算机软件著作权纠纷案，由北京高级人民法院二审作出终审判决。
 竟然是公司与公司的对簿公堂！
史上著名的GPL 案例概述 思科产品（WRT54G） 违反GPL案 2003年9月，思科发布的路由器产品，遭到自由软件基金会起诉，称其产品中使用了GPL自由软件，但是违反了GPL相关条款。
OpenTV 违反GPL 案 同样是在2003年5月，在硅谷的厂商OpenTV ，被自由软件基金会起诉，称其产品使用了GPL的项目，但是却没有将最后的产品的源码以同样的许可证再发布。
BusyBox 起诉众多手机厂商 2009年12月14日，14家公司被起诉，其中包括Best Buy, Samsung,Westinghouse，因为其分发知名自由软件 BusyBox 时违反了 GPLv2 许可协议。在发布自己的产品时，并没有包括 BusyBox及其衍生的源代码。
谁来帮助开发者打官司？ 看完以上的故事，那么问题来了，如果开源项目的作者是某个独立的个体，由于各种原因，惹上了官司，该如何处理？请各位看官，看下面一个故事：
 本世纪初，Phil Zimmerman 撰写了一款相当优秀的邮件加密程序Pretty Good Privacy (PGP)，但是根据美国的法律，可怜的Phil 还是违反了一条: 美国对于加密软件的出口做了严格的限制，是有法可依的。美国政府还是起诉了齐默尔曼（Zimmerman）， 理由就是在互联网上发布了 PGP ，其性质是违反了美国法规。辛亏Zimmerman 并非孤身一人，他最终得到了 Eben Moglen 的帮助，而且还是无偿的。最终的结果是美国政府撤诉了。
 我们再来回忆另外一个结果截然不同的另外一个耐人寻味的故事：
 身处Great firewall 之中的人，大概对于使用VPN等软件来获得被封锁的站点和服务都习以为常，其中有一款开源软件叫做Shadowsocks，以简单的配置和快速的安装而获得非常之多的用户，但是其作者有一天出来说，搞不下去了，于是删除了其在GitHub上的所有代码。这个作者据说只是被相关部门叫去喝了一次茶。Ta 连对簿公堂的机会都没有。
 那么我们不妨细细的思考一番，如果一家公司或一个人所开发的开源项目，使用的是GPL或其它许可协议，而另外有一些公司或个人违反了这个协议里面的条款，那么谁可以来起诉这些公司？例如，最近中国发布了汉语版的开源协议——木兰许可证，那么如果有公司违反了其中的条款，谁来去法院状告？
SFLC 的成立与发展 随着开源的日渐流行，相关的法律问题也日渐凸显，尤其是以Linux为首的重量级项目，尤其是和SCO 打官司的过程，当时的OSDL（Linux基金会的前身）斥资4百万美金，成立了软件自由法律中心（Software Freedom Law Center），由一直以来担当自由软件基金会的法律顾问 Eben Moglen 担任第一任主席。</description>
    </item>
    
    <item>
      <title>开源软件基金会的崛起与演化</title>
      <link>http://www.opensourceway.community/posts/foundation_introduce/the-rise-and-evolution-of-open-source-foundation/</link>
      <pubDate>Mon, 02 Mar 2020 16:57:42 +0800</pubDate>
      
      <guid>http://www.opensourceway.community/posts/foundation_introduce/the-rise-and-evolution-of-open-source-foundation/</guid>
      <description>开源之道引言 本文翻译之一篇基于CC-By协议的论文，该论文最初发表在《International Free and Open Source Software Law Review》Vol. 5, Issue 1 中，作者是 Paula Hunter 和Stephen Walli。
开源之道打算在2020年的3月份花一整个月的时间来整理关于开源软件基金会的资料，这篇算是开篇，外加前几年的累积，预计会在月底有一个较为宽广的视野，起码让人有路径可循，如果能够回答“开源基金会为什么会存在？能够帮助人们干什么？”这个问题，那就真是万幸了。
摘要 自由和开源软件（FOSS）项目共同体（Community）仍然保持着增长和爆发的上升姿态。当开源项目的增长达到某个临界点的时候，就会有一些企业意图想要参与，而企业有大量的软件知识产权相关的内容需要管理，然而，这些却不是项目本身所擅长的。那么中立的、非营利性质的 FOSS 基金会就是提供这些问题的解决方案的，通过提供知识产权的管理、以及业务和技术方面的服务，进一步帮助项目和共同体的成长。本文重点回顾了中立、非营利性的组织是如何发展的，以及它为何能够满足自由/开源软件共同体、以及企业不断变化的法律、商业和技术需求。
引子 伴随着开放源代码软件的增长，以及全球开发者的积极参与，当然，这些都得益于日益廉价和普及的互联网访问，渐渐形成了一个巨大的基于协作的共同体，软件开发者和IT 专业人员在整个软件的生命周期都可以相互协作。随着软件知识产权(IP)实践的成熟，自由和开源软件(FOSS)共同体也逐渐的完善了自我保护。
FOSS 许可证经过了30多年的发展和演化，已经从最初的完全的学术性即“随你所愿”，继而到从总体软件格局的自由软件的萌芽，以及现在更为复杂的确保软件自由的方法。举例来说，随着美国法律承认软件专利及其带来的风险，FOSS许可也引入了专利相关的条款。伴随着商业公司对开发和使用基于FOSS许可下的自由/开源软件的重度依赖，FOSS的许可证则重新启用了一些传统的许可证结构和语言。这其中这个逐渐成熟的演变过程中，起着关键角色的就是开源非营利基金会的对于软件知识产权管理机制、以及在其中的沟通、斡旋、协作的作用。
许多由志愿者所带领的、基于共同体而开发的自由/开源软件许可项目，在其技术发展和演变过程中达到了企业也希望参与其中的程度。而商业公司在知识产权管理、种源跟踪和治理方面有非常不同的需求，因为它们关心的是管理其专利组合的风险，并希望尽可能减少潜在的诉讼。自由/开源软件基金会则恰好满足了这样的需求，其实一些关键的自由/开源软件项目已经做到了。
Apache 软件基金会（下称 ASF），围绕 Apache httpd 软件项目，于1999年建立，隶属于美国的慈善组织，而后发展壮大，尤其是 Apache 许可证 2.0 是相当的成功。这也是当年 IBM 倾其全力而参与到 Apache Httpd 的直接原因，而且还将该项目纳入其旗舰产品：WebSphere。同样，开源发展实验室（OSDL）是为了支持Linux而在2000成立，作为一个非营利性的行业协会，该协会致力于更好地管理知识产权风险，从而让Linux 心无旁骛的发展，Linux操作系统成为了许多传统上竞争UNIX系统领域的供应商的产品线的基石，OSDL 作为非盈利组织后来与自由标准组织进行了合并，自由标准组织是一个负责制定 Linux 编程接口的非盈利贸易组织，合并之后就是现在如日中天的——Linux 基金会。Eclipse基金会是在2004年围绕Eclipse IDE项目成立的，它一直是严格的Eclipse软件知识产权管理过程和自由/开源软件许可演进的守护者。
尽管每个基金会都有不同的价值观和主张，也有着完全不同的发展路线，而且都有自己忠实的拥泵。但是他们之间还是有共同点的，那就是：提供知识产权管理、委托补偿的治理结构、以及共同体和协作的支持机制。
Outercurve Foundation 是最近（在本文翻译的过程中，2020年3月，该基金会已经死亡。——译者注）建立的，它采用了这个定义良好的模型，并将其应用到自由/开源软件项目中，以这样一种方式，让开源项目从这种非盈利的自由/开源软件基金会中受益，而不用承担建立自己基金会的费用和风险。Outercurve Foundation提供与自由/开源软件基金会相关的知识产权管理和商业运作，亦是一个非盈利的行业协会。它与技术、项目孵化和自由/开源软件许可证无关的 (只要许可证得到了开源项目的批准)。
公益还是会员制？ 多个重要的开源软件基金会最初都是在美国本土创建的(如 ASF 和Linux基金会），自由/开源软件基金会的一个早期决定是将自己建立为一个非盈利的贸易协会(美国税法第501&amp;copy;第6条)还是一个公益的非盈利慈善组织(美国税法第501&amp;copy;第3条)。自由/开源软件社区上述两类非营利组织之间的微妙区别还是颇为在意的。
在评价这些备选方案时，经常讨论两个主要因素:所涉经费问题和组织控制方面，谁是最终的受益者？许多自由/开源软件项目，如ASF或自由软件基金会，都在寻找一种方法，在鼓励向实体捐款的同时，将个人开发人员与组织的财务是相分离的。慈善性质的基金会，是可以接受资金捐助的，而且所接受的资金是可获减免税的，关于资金的用户，可以用来支付基金会在运营方面的基础设施费用，而且在某些情况下，还可以用于特定的项目开发。在很多情况下，一个健壮的治理结构是随着项目的成长而演化的，（例如 ASF), 因此采用一个很正式的慈善组织来管理项目的整个生命周期是合情合理的，至于”公益“的概念，它也是与自由/开源软件共同体的哲学思想相辅相成的，因此，其实选择慈善组织不是那么的简单，如仅仅只是找一个记账的单位罢了。
通常是由众多的供应商（如，软件公司）合力来指定组织，如果他们要参与到项目中来、或者资助项目、或者参与组织的架构，不过都是为了控制权的平衡。虽然这里的主要区别是，基金会的成员是基金会运作之下的受益者，但在大多数情况下，更为广泛的共同体参与贡献并享受劳动成果。Linux项目是自由/开源软件项目的一个很好的例子，它通过一个基金会从大量的供应商投资中获益。Linux基金会(美国税法下的一个贸易组织)通过其成员计划和成员章程来平衡其成员在一个非常大的共同体中的需要和利益。在大多数情况下，对税收的影响不是主要因素;治理结构和知识产权管理更为重要。
基金会的价值 其实无关乎自由/开源软件基金会的具体性质，贸易组织也好，慈善组织也罢，他们的价值主要是体现在以下三个方面：
 为参与者提供了一个软件知识产权管理的法律框架，在这个框架中，商业公司可以和自由/开源软件项目的贡献者和谐的在一起工作。 还提供一些技术服务，如软件仓库、问题跟踪、代码签署证书、以及技术指导等。 提供日常的运营和治理支持，如财务和现金服务、会员管理以及项目的沟通和公关相关。  法律框架和知识产权管理 所有权中立 对于非营利性的自由/开源软件基金会来说，企业参与到基金会来主要的益处，就是由于基金会对于软件知识产权的管理和拥有所有权，让项目成为了一个中立的地方，是企业之间的协作成为了可能。没有哪家公司愿意参与到其他公司（可能是友商或合作伙伴）持有的 FOSS 项目。企业也会担心自己的钱打了水漂，或者是为友商做嫁衣裳，这些都是难以让商业公司接受的。那么作为中立的基金会在此所起的作用就非常的大了，因为中立的机构拥有所有权，并允许所有公司平等参与，没有哪家公司称拥有项目，因此，无论公司彼此之间是竞争还是合作伙伴，都可以从项目中获得最大的回报，还毋须担心将优势拱手想让给对手。</description>
    </item>
    
    <item>
      <title>Apache 基金会创始成员访谈录 ———— 回顾 Apache 20年历程！</title>
      <link>http://www.opensourceway.community/posts/foundation_introduce/asf-founders-look-back-on-20-years/</link>
      <pubDate>Thu, 09 Jan 2020 12:01:53 +0800</pubDate>
      
      <guid>http://www.opensourceway.community/posts/foundation_introduce/asf-founders-look-back-on-20-years/</guid>
      <description>引言 刚刚过去的2019年是 Apache 基金会成立的20周年，来自Apache 基金会的Sally Khudairi搞了一件事，那就是找找当年的创始成员，除了祝贺之外，就是想听听这些人是持什么样的态度。
Sameer Parekh Brenn, Mark Cox, Lars Eilebrecht, Jim Jagielski, Aram Mirzadeh, Bill Stoddard, Randy Terbush, and Dirk-Willem van Gulik,
问题：你第一次参与Apache HTTP 服务是什么时间？做什么？ Mark：  1993年，我还在读博士，当时为 NCSA web 服务撰写一些特性以及修复一些Bug，而且也会做一些安全方面的工作，在1995年四月我收到了 Brian Behlendorf 的邀请，他希望我加入到 Apache 的核心开发团队中，其实大家都是那时候的参与进去的， Apache 开发小组才刚刚成立了几周不到。
 Randy：  起先我是遇到了一些均使用 NCSA web 服务的小伙伴们，如果我没有记错的话，在1994年末，我开始和其他人交换一些想法和补丁，从而使得 NCSA web 服务能够满足日益增长的扩展服务。
 Dirk:  我本人在 NCSA web 服务的早期阶段就开始参与了，当时我在研究所工作，当时需要一些特定的功能，如希望可以将巨大的卫星图像上较小的地理子集能够作为图像提供，这样的方式对于当时来说还有些新奇的，因为当时正常的做法是：填写表格 -&amp;gt; 发传真过去 -&amp;gt; 等上几个月，直到索大的胶带盒子送到 -&amp;gt; 然后，将需要数周或数月的时间来加载这些磁带并仅提取所需的区域。于是顺其自然的就参与到 Apache中来了。
 Jim:  是在1995年，起初是将之移植到 Apple 的旧的Unix 系统、A/UX上，写些补丁、增加些功能、修复bug，也会做些配置和构建工作。</description>
    </item>
    
    <item>
      <title>（开源项目）治理模式</title>
      <link>http://www.opensourceway.community/posts/foundation_introduce/oss_governance_models/</link>
      <pubDate>Thu, 23 May 2019 14:33:01 +0800</pubDate>
      
      <guid>http://www.opensourceway.community/posts/foundation_introduce/oss_governance_models/</guid>
      <description>开源之道按 说到治理，没有比政府更为擅长这个了，因为他们有几千年的经验可以借鉴，人性是复杂，尽管很多科学理论都证明了人类是天性趋于合作的，但是本能仅限制于近亲和血缘关系，要想做更大、更多的事，必须通过治理来实现，否则就陷于一片混乱。开源项目的发展也是同样的道理，因为涉及到人的劳动和协作，以及荣誉、成果的归属等。成功的开源项目如Linux、Hadoop、Kubernetes等是超越了大多数中国人的想象力的，在一个弱社会、信任度极低的社会中，没有强大的政府背书这几乎是不可能的事，而且还涉及到跨越国家、种族、时区等诸多组织力量。庆幸的是社会学家、实干家、开发者布道师们也在观察和总结这些背后的思想、方法论。OSS Watch 就是其中的翘楚！
引言 我们首先需要厘清治理模式是什么？治理模式描述了项目参与者可以承担的角色，以及项目内的决策流程。此外，治理模型还对参与项目的基本规则、项目团队和社区内的沟通和共享流程等的描述，换句话说，有效的治理模型，可以防止开源项目陷入焦油坑。本文会解释为何说治理模式是有必要的，对于在开源项目中采用治理模型相关的挑战方面的思考，且进一步的深入了解模型所覆盖的关键领域。另外还就关于治理模型的文档整理做了一些必要的说明。
为什么项目需要治理模式？ 一千个人眼中就有一千个哈姆雷特，几乎是每有一个开源项目，就会有一个相应的开源策略，正因为此，关于项目的各项细节如政策、战略等，要准确无误的传递给对于项目有产出的潜在用户和开发者。一个清晰的治理模式可以让潜在的贡献者能够如何参与到项目中来，以及能够获得什么，甚至是提供哪些保护措施以确保大家的贡献始终是可用的。此外，它描述了有助于确保潜在用户项目可行性的质量控制流程，清晰简洁的开发沟通是开放式开发实现可持续性的最重要的步骤。
治理模式涉及范围颇广，从中心化的控制，无论是单独的个体还是组织（仁慈的独裁者），到基于贡献度认可的分布式控制，都会有所涉及。这中间有个类似光谱的范围，在这个范围内容的任何一点都会有相应的治理模式，而且随着项目的成熟，项目所选择的治理模式还会有所变化。下面一节图中所示的内容即是FOSS的项目示例，以坐标的方式所表达，该图还说明了这些项目是否鼓励来自广泛来源（市集式）的贡献，或者是否是仅针对一小部分人的专门贡献（大教堂风格）。关于贡献的模式的进一步的信息，请阅读 Eric Raymond 的大名鼎鼎的文章《大教堂与集市》，这里蛮耐人寻味的是，特定的治理风格并不会一定和某个贡献模式挂上钩，有的时候会出现，在项目的开始阶段，是采用的大教堂的仁慈的独裁者模式，但是随着时间的转变，项目的成熟，会转变为市集式的贡献或精英式的治理（或两者兼而有之）。
治理模式和贡献模式  Linux 项目就是 Raymond 提及的经典的集市模式，鼓励任何人都可以做出贡献，尽早发布，经常发布，该项目由其创始人 Linus Trovalds来治理，Linus 对发布中包括哪些贡献拥有最终的决定权。 GNU Emacs 是Raymond 论及的所谓的大教堂模式，由一个小的团队所组成的贡献者，而且发布的频率并不是那么的频繁，项目早期由 Richard Stallman 治理，不过值得注意的是，在Raymond 完成它的文章之时，Stallman其实已经不再管理这个项目了，而当前的维护者采用的是更加开放的贡献模式。 Apache HTTPD 项目是 Apache 软件基金会的项目，遵循正式的精英结构，Apache面向全球所有人，任何人都可以在上面贡献代码。 Apache OODT ，同样也是 Apache 软件基金会的项目，采用的是Apache精英模式，然而，它的开发模式是大教堂风格的，并不会积极的邀请他人作贡献。当这些核心团队成员觉得可以保证一定质量水平时，才会发布具体的版本。 Ubuntu 则是一个典型的仁慈的独裁者模式，即项目的把控者是其创始人和资助者：Mark Shuttleworth，然而，实际上的许多决定是由社区委员会和技术委员会决定的，而委员会的组成是由社区通过选拔来任命的，Ubuntu系统的核心部分是在 Canonical 内部开发，采用的是大教堂的风格，然而，也有社区社区的开发人员会被邀请去开发系统的关键部分，比如Ubuntu收集平台的核心应用程序。  市面上还在活跃的治理模式 我们来适当的分析一下这些典型的治理模式。首先，来看看Ubuntu 的治理模式，根据Ubuntu的描述，更加侧重于描述社区的结构以及与该结构的每个组件相关的职责，以及项目中决策过程的概要描述。Ubuntu项目是将开发人员信息和治理文档中的信息是分开的，但是其技术管理流程是被明确所记录的。
Apache 软件基金会为每个项目设置了两份治理文档，首先是基金会本身的治理文档，如组织结构的规定，另外的文档还专门介绍了诸如决策的关键过程的内容，然而，由于每个项目都是自由的，内部有一些限制条件，为了定义好各自的这些具体的变化，Apache软件基金会的很多项目都有自己的治理文档。有关示例，请参阅Apache Forrest治理说明。
我们列举的第三个关于治理模式的例子是关于Taverna项目，该项目是一个属于学术界内发展开源的例子，因此展示了一种在学术环境中发挥作用的模式。Taverna 的模式和上述Ubuntu以及Apache软件基金会一样，侧重于项目的结构和管理流程。
采用治理模式的障碍 尽管在启动的时候定义好治理模式是非常重要的，但是许多项目都忽略了这一点，其中当然有非常多的原因，这里列举几个最为常见的：
 认为这个过程没啥必要，甚至还有些“繁文缛节” 担心该醒目会失去方向感 担心失去项目的战略控制权 认为项目还处于弱小的状态，暂时不会吸引到活跃的用户或开发者  虽然前三个问题都可能会遇到，但是只要运用恰当的治理模式这些担忧是很容易就消除掉的，然而，第四个问题确实非常主观的问题了，项目究竟多久算年轻？因为项目的任何潜在的贡献者都需要知道如何有效和积极的做出贡献，以及项目会如何处理他们的贡献。如果说一个项目没有这些问题的明确指导，那么大多数人都会离开，而不是加入。但是如果说这些早期的项目采用者被证明可以帮助指导项目走向成功，那么他们就有可能留下来，单打独斗的外部贡献者可能会对项目的可持续性产生重大影响，那么项目的发起人是特别珍惜这些人的存在的，几乎承担不起失去他们的风险。
在项目的早期阶段解决上述问题是有着明显的益处的，而且它们也不会成为治理模式的障碍。接下来就让我们一个个的深入讨论下。
繁文缛节 有很大一部分人认为治理模式简直是节外生枝，多此一举，但是事实上不是这样子的，只要仔细思考一下，治理模式并非大家想象的那样官僚行为，设计精良的话就可以带来很大的益处。目的是让模式尽可能的简单，还高效。治理模式并不需要事事都关心，实际上，它也不应该往那个方向去思考。相反，治理模式应该提供一种清晰透明的方式来指导项目管理的轻量级的方法。高度透明的方式可以吸引更多的人参与进来，这样的话，人们是可以看到项目是如何运转和进行的，那么人们就会考虑自己参与进去能够影响到什么。
特别需要注意的是，采用治理模式的目的是让人们参与做贡献变得更加容易，而不是起到相反的作用，它应该消除可能导致每个参与者浪费时间的不确定性。
迷失 担心治理模式会给不断变化的项目设置了障碍，之所以人们这么认为，大概是因为确实是有许多管理不善的开源项目在敏捷方面受到了一些限制。这是一种典型的误解，其实是没有找到问题的根源，而并非是由治理本身所带来的。设计精良的治理模式实际上是可以提高项目的敏捷性的，因为其可以做到让新来的贡献者如何在不干扰其核心目标的情况下为项目带来更多的可能性。治理模式还提供这样一种机制，即允许整个社区定义他们认为项目该往哪个方向发展，同时又能确保核心项目团队不会失去控制。关于失控的问题，我们将在后面一节进行专门的讨论，我们这里更加关注与愿景和方向。
开源项目的特性就是项目不可能是所有人拥有所有事，因此可持续项目的目标应该是为其核心利益相关者提供尽可能完整的解决方案，同时仍然对其他潜在利益相关者感兴趣。开源项目要随时准备好接受其它意外的投入，并且应尽可能的在未来的愿景和方向上满足潜在的内容。如此的做法可以明显增加项目在寻求可持续发展方面可以利用的资源，当然，我们也知道，那些个想无所不包、无微不至的项目几乎都失败了，因为过于分散的精力导致哪里都做不好。</description>
    </item>
    
    <item>
      <title>Apache 之道，开源可持续成功的秘籍</title>
      <link>http://www.opensourceway.community/posts/foundation_introduce/the_apache_way_to_sustainable_os/</link>
      <pubDate>Sun, 24 Mar 2019 12:58:10 +0800</pubDate>
      
      <guid>http://www.opensourceway.community/posts/foundation_introduce/the_apache_way_to_sustainable_os/</guid>
      <description>毫无疑问，开源软件是越来越重要了，那么作为开源软件中重要的中流砥柱的 Apache 软件基金会也迎来了20周年，那么我们是不是应该反思一下关于Apache的能够如此长盛不衰？以Apache之道为原则的社区驱动开放模式尽管遇到了不少的挑战，但是仍然在开源的生态系统中发挥着举足轻重的作用。
Apache之道的历史要更为远久一点，该方法论的提出是在基金会建立之前，即24年前，那时还称之为原创Apache小组。该方法论经过时间的证明，是Apache成功的一个重要的基础，而且我们认为它对于开源之所以能走到今天是至为重要的。
这么多年下来，Apache 之道尽管修改了不少内容，但它仍然坚持初心：高度的透明性，让所有人可访问的中立的环境中进行社区驱动的协作。
Apache 之道从法律和社会框架两个维度对开源进行了定义，它有助于人们理解是什么让开源变得如此的强大，以及参与开源的过程中的行为方式。本文我们将在基金会的使命的背景下来诠释 Apache 之道：
 “Apache 软件基金会的历史使命是为公众利益提供软件。我们由许多志同道合的独立的个人所组成，这些个人通过产于 ASF 的社区活动，来为软件项目提供服务和支持。”
 接下来就让我们一句一句的来剖析这段宣言:
提供软件的公共产品 本章节的关键点：
 我们生产的软件是非竞争性的，也是非排他性的。 在任何上下文中使用Apache 软件都不会降低其他人的可用性。 用户和贡献者对于基金会、项目以及社区均毋须承诺任何的责任。 使用符合开源定义的许可证是必要的，但这并不足以完成我们的使命。  investopedia 站点定义的公共产品的意思是：”一个人可以消费的产品，而不会降低其对另一个人的可用性，并且不会排除任何人。”从字面上来看，似乎我们使用该定义是蛮不错的选择，但是，这其中有一些细微的差别，我们的使命不是生产“公共产品”，而是“为公众利益提供软件”。
若要理解为什么这点差异是如此重要的话，人们必须去思考是什么激励着 Apache 软件基金会去为公众利益而生产软件。
开源软件可以被无限的复制和重用，每一位用户都可以按照自己特定的需要而去更改代码，他们也可以根据需要和其它的软件合起来，他们可以使用自己设计的创新产品和服务，且从中获得切身利益。以上所谈都是可行的，而且也不会影响到其他人对软件的使用。因此，ASF 所生产的软件可以通过许多种不同的方式提供给公众利益。
为了让我们能够完成这部分任务，至关重要的是，我们选择使用法律来保护基金会，即策划了软件的许可证。对于我们来说就是Apache 许可协议版本2，另外，我们也采用了inbound 许可证规定，该规定定义了那些许可证授权的软件是可以用于Apache 项目的，该规定可以简略的总结为：
 协议必须满足开放源代码定义。 在实践中应用的许可证不得强加超出 Apache 许可证 2.0 的限制。  这也就意味着人们完全可以放心，由Apache软件基金会的孵化的软件项目，既是 公共产品，也是 为公众利益。人们可以基于任何目的去使用Apache的软件，而且人们并不会对基金会、项目、以及社区有任何的责任。
这里有一个值得重点强调的事情是，有些软件采用了Apache许可证，但是没有遵循相应的 inbound 许可规定，这类项目可能会带来 Apache 许可证所没有涵盖到的限制;因此，仔细检查这些项目的许可政策非常重要。这也就是说，如果只是采用了Apache 许可协议，而不是在基金会所孵化，注意这而二者之间有着显著的差异。
Apache 项目在很多领域里都是成功的，这要归功于我们所遵守的定义非常清晰的许可证规定。这也让下游的用户可以非常清楚的理解那些事情可以做，那些事情是不能做的。Apache 许可的初衷是希望每个人参与开源的机会是均等的，这个开源是广义的开源，不仅限于Apache软件项目，也包括其它的开源项目。Apache的许可证是被允许修改的，但是修改之后的Apache协议，就再也不是Apache许可证了，也不会得到 Apache 软件基金会的许可或承认。修改之后的许可证是不可以使用Apache的名义的，这也是被严格禁止的，因为这会让用户感到困惑，也会损害Apache的名誉/品牌。
虽然我们认识到许多方法可以授权软件，无论是开放源代码还是其他方式，但我们断言，只有同时使用我们的许可证（未修改）和 inbound 许可规定的项目才能真正遵循并遵守 Apache之道。、
虽然OSD批准的许可证和相关政策是成功开源生产所必需的，但我们认为还需要补充一些内容。它们为开源的生产提供了法律框架，但它们没有提供社会框架，这就引入了我们所阐述的使命的后半句话：
 我们由许多志同道合的独立的个人所组成，这些个人通过产于 ASF 的社区活动，来为软件项目提供服务和支持。
 我们由许多志同道合的独立的个人所组成 本章节的关键点：</description>
    </item>
    
    <item>
      <title>云原生的旭日东升 —— CNCF 2018年度报告解读</title>
      <link>http://www.opensourceway.community/posts/foundation_introduce/review-cncf-2018-annual-report/</link>
      <pubDate>Wed, 13 Feb 2019 12:31:27 +0800</pubDate>
      
      <guid>http://www.opensourceway.community/posts/foundation_introduce/review-cncf-2018-annual-report/</guid>
      <description>引言 阅读非盈利基金会的年度报告有的时候是一种享受，如 Apache 2018年度报告 （PDF） ，你想知道的全部都在，甚至会引导你进一步的探索。但是有的时候，却是一种折磨，如OpenStack 2018年度报告，就是那种蹩脚的售前做的PPT一般，让人味同爵蜡。可是还有一种是位于两者之间，既遮遮掩掩，又欲说还羞，让你不得不去进一步的进行解读。于是有了这篇文章。
当然，著名的云原生布道师宋净超也做了为题：CNCF年度报告解读（2018年），解读的非常不错，推荐大家阅读，我这边尽可能的读点和Jimmy不一样的视角。
阅读非盈利基金会报告需要的基础知识 我们可以肆无忌惮的说，非盈利性的、中立的开源软件基金会所生产的开源软件项目，将会是现在和未来的软件主流生产方式！这个无论是从公共产品的角度，还是商业联盟的角度，乃至天然的人类协作方式，都讲的过去。请允许我在这里再一次引用 Nathen Harvey 在 Information Week 中的文章中指出了三个问题：
 “项目应该由商业的赞助商驱动还是外围的贡献者驱动？商业利益是否应该凌驾于社区的意愿之上？该如何以及在哪里为商业实体和开源社区之间划上一个明确的界线？”
 这三个问题确实是异常的尖锐，回答起来就显得非常的关键，但通过基金会的模式，开放的治理可以解决大多数的问题。
开源项目/社区、非盈利基金会和商业公司之间的关系 有人说一图胜千言，以下这张图来自 Siobhán 的研究：《Nonprofit Foundations And Their Role In Community-Firm Software Collaboration》论文。
该图完整的说明了开源项目/社区和非盈利基金会以及商业公司之间的关系。也完整的定义了基金会的意义和功能所在，开发者信奉的哲学中，是不希望有过多的金钱和干涉，希望按照自己的意愿行事。而这让奉行实用主义、关注利润的商业公司是完全相悖的，而且和竞争对手合作，也需要有所约束。于是基金会在他们二者之间找到了位置。
非盈利基金会的性质 这个由于特殊的环境因素，比较难以理解，因为都是美国的组织，不过我们在阅读这些基金会年度报表的只需要知道一点即可，那就是 501&amp;copy;(6) 和 501&amp;copy;(3)之间的区别。
比如Linux 基金会就是 501&amp;copy;(6) ，而Apache 软件基金会就是 501&amp;copy;(3) 类型的。具体有什么区别，请有心的看官查阅相关资料。但是在年度报告体现出来的就是Apache 软件基金会会事无巨细的将财务报告写上，而CNCF就不会有这方面的任何材料。
CNCF 的历史背景 这一点开源之道专门在2018年撰写过一篇文章：CNCF 是如何工作的，请看官在进一步阅读之前，尽量先读一下该文，了解一下CNCF。
CNCF 2018 年度报告 交待完上述内容，我们就看一下CNCF的年度成绩单。
孵化项目 &amp;ndash; 基金会存在的核心价值 除了顺利毕业的三个项目：Kubernetes、Prometheus、Envoy，以及一大波选择CNCF孵化的项目，如18年成功进入孵化和沙箱的16个项目：
那么就是下图所示这些项目的更新和发布信息：
随着开源开发成为软件开发方式的主流形式，开源项目的良性发展成为所有人追求的对象，谁都知道开源项目的失败率是非常之高的，先进和设计良好的技术仅仅占据其中因素的部分而已，良好的社区发展也占据不亚于技术本身的分量，所以这是基金会重点关注的对象，尽管所创造的制度并不能够直接干涉项目和社区，但是可以为项目和社区制造一个良性运作的环境，开发者要肆无忌惮地发挥自己的创新的能力，是需要一个能够思考、实践和正负反馈的良性的环境的。这就是核心价值，如果没有被世界所需要，那么一切围绕这个核心的内容将不复存在。
另外值得一提的是CNCF提供了让人们公开查看项目进展的工具：DevStat，以图形化的方式展示项目的活跃度，举个例子，如果你觉得那个项目被某个商业公司所控制的话，就来这里看看，相对于RedMonk的分析而言，这个是源头。当然这是帮助公司的社区经理、开源办公室等需要数据分析和报告的人们的利器！
发展会员 —— 基金会得以持续运转的财务保障 这就是本文命题的支柱：增长幅度是130%，简直不可思议。（看这个数据，最好是回忆一下2013~2015年的OpenStack基金会扩张速度。）
企业会员是基金会发展的重要经济来源，也是衡量一个基金会在企业心目中重要标尺，Marketing 是一个非常讲究及时回报的行业，当然，这可能和公司具体的战略有关。当绝大多数的Marketing部门关注到了这个基金会的影响力，就会殷勤的掏出钱来帮助基金会。那么CNCF去年的会员发展，则说明了很多IT公司都看到了云原生这个新兴领域，竞争也是异常的激烈的。
Marketing 工作 ———— 维持生态的重要手段 关于这点的内容，我这里就不为大家截图了，也就是说Marketing的数据可以大体上扫描一下，如：</description>
    </item>
    
    <item>
      <title>Apache 软件基金会未来的5年战略规划</title>
      <link>http://www.opensourceway.community/posts/foundation_introduce/five-year-strategic-plan-for-the-asf-2018/</link>
      <pubDate>Tue, 05 Feb 2019 21:52:33 +0800</pubDate>
      
      <guid>http://www.opensourceway.community/posts/foundation_introduce/five-year-strategic-plan-for-the-asf-2018/</guid>
      <description>引言 2018年末，开源界最为让人瞩目的事情，莫过于MongoDB、Redis、Neo4j等公司纷纷修改许可证，各种媒体便落井下石，开始煽风点火，称云计算厂商将会把开源吃掉，唯恐天下不乱。然而媒体毕竟是媒体，是开发者之外的世界，永远是“隔着玻璃亲不着嘴”，这不AWS 直接升级为Apache的铂金会员，这直接将国内那些媒体的扇了多个耳光。开源的势头是前所未有的好！ 只是售卖软件许可的商业模式正在走向衰落。而开源发展的最大势力，则是依托于非盈利基金会下的开源项目和社区。毫无疑问，ASF 是其中的翘楚，那么开源之道在新年之际，就和大家一起看看Apache 软件基金会的未来5年战略规划。
开源之道过去也介绍过Apache软件基金会：
 Apache 基金会是如何运作的 Apache 2017 年度报告 开放的 Apache 究竟有多开放?  ##
 由于本文翻译之 Apache 官网，原文以第一人称写就，开源之道保留第一人称的翻译，特别说明，下文中的我们指代的是 Apache软件基金会。
 愿景 我们的使命是根据我们的章程，在Apache许可下免费支持创建和分发开源软件。为此，我们为志同道合的社区提供项目空间和资源，以便在我们的法律保护伞下蓬勃发展，开发和发布软件。
我们视项目的独立为第一要务，不会受到任何公司、组织或其它外部的影响，这使得我们能够为社区提供中立的立场。
作为一个基金会，我们并不规划技术战略，而是将具体的技术战略委托于具体的项目。
Apache 软件基金会是由成员（个人志愿者）管理和指导，在这点上始终坚持如此，Apache 软件基金会没有公司或组织形式的参与，公司和组织也不能成为成员，而且也不能直接参与由Apache托管的项目。
我们帮助社区了解和实践 Apache 之道，众所周知，Apache 之道是多年以来将最佳实践记录和积淀下来最为有效的协作和让项目可持续性发展的方法论。
Apache 社区成员均是由独立的个人来担当，成员的权力和责任也是基于他们个人的优点具体而定，他们在社区所做的事情和其本人在外部无关，无论其外部的身份为何（职位、学位、组织贡献等）。
我们为开源项目提供高可靠、高自动化的核心基础设施服务，当然也鼓励项目成员根据具体自身需求，自行决定是否使用一些非 Apache 基金会提供的服务，当然这些服务是可以让我们更加的专注。为了提高服务的高可靠，我们所有关键的数据和服务都在自身完全可控的系统上进行管理，并做了镜像。
我们的营销和外展活动，同样侧重于践行 Apache 使命的活动，当然也会兼顾支持和赞助我们的厂商，以及我们自身的筹款。
我们根据已证明的需求为我们的项目提供法律和品牌管理服务，并定义品牌指导方针，以帮助我们的项目以适当的方式从强大的Apache品牌中受益。
我们非常欢迎各种新的项目进入 Apache 孵化器，经验丰富的导师将会帮助你，快速的学习 Apache社区和项目的运作方式。孵化器的存在，就是社区所定义和决定的，所以基金会对于项目的孵化阶段是相当的重视，这也是基金会在壮大发展的同时，能够始终坚守价值观的秘诀所在。
目标  确保 Apache 软件基金会为软件项目的社区提供的服务能够得到明确、清晰的定义，而且能够确保以满足社区期望的形式成功的进行交付。 不断改进我们在识别、吸引、欢迎、发展等环节，以迈向 ASF 的目标: “志同道合的社区”。 以这种方式有效地扩展我们的运营和治理流程，从而让 ASF 继续成为简单的流程、轻量的治理模式、大型的分布式组织，使得其中心业务以符合 PMC 预期为其社区服务的方式服务于项目。 确保 ASF 在计划期限内的没有什么财务压力，并为长期稳定发展奠定基础。  ASF 提供的服务  说到底，ASF 的核心任务是孵化出优秀的项目，并让项目健康的成长，那么围绕这一切就是提供相应的最佳服务。 ———— 开源之道注</description>
    </item>
    
    <item>
      <title>CNCF 是如何工作的</title>
      <link>http://www.opensourceway.community/posts/foundation_introduce/how_cncf_works/</link>
      <pubDate>Tue, 19 Jun 2018 13:25:30 +0800</pubDate>
      
      <guid>http://www.opensourceway.community/posts/foundation_introduce/how_cncf_works/</guid>
      <description>引子 技术创新与社会创新是同等重要的，在人类有限的历史中，二者是相辅相成不可分割的，福特汽车既将制造的步骤划分，也将工人的组织结构进行了调整；贝尔实验室那些无数的创新，不得不说和它的开放的办公环境和平等的文化有关；硅谷成功的秘密，那些历史学家和成功的商人们，从来不仅仅提及某个技术的颠覆，而总是会谈到资本、宽松、鼓励失败等社会创新。反思本土，是否被技术蒙蔽了双眼？是的，应该努力提高自我的认知，在关注技术创新的同时也要关注社会创新，因为现代技术的发展绕不过去的就是协作，一个大型的软件项目工程，参与的人何止千万？该如何组织和协调诸如Kubernetes大规模全球性的协作？在围绕利益分配、政治角逐、文化冲突、技术先进和创新等等方面必须做到应对之道。
这次开源之道介绍的是CNCF，近年来随着容器编排和微服务发展起来的新一代基金会，随着其坐着火箭般的上升速度以及引起的轰动效应，你不得不关注它背后的运行机理。
CNCF的使命 CNCF 没有偏离自己的主题，核心是解决技术问题：基金会的使命是创建并推动采用新的计算模式，该模式针对现代分布式系统环境进行了优化，能够扩展至数万个自愈式多租户节点。
所谓的云原生系统须具备下面这些属性：
 应用容器化：将软件容器中的应用程序和进程作为独立的应用程序部署单元运行，并作为实现高级别资源隔离的机制。从总体上改进开发者的体验、促进代码和组件重用，而且要为云元是国内应用简化运维工作。 动态管理：由中心化的编排来进行活跃的调度和频繁的管理，从根本上提高机器效率和资源利用率，同时降低与运维相关的成本。 面向微服务：与显式描述的依赖性松散耦合（例如通过服务端点），可以提高应用程序的整体敏捷性和可维护性。CNCF 将塑造技术的发展，推动应用管理的先进技术发展，并通过可靠的接口使技术无处不在，并且易于使用。  CNCF 的定位 CNCF 其实是在开源社区的基础上发挥着作用，应负责：
 管理项目  确保技术可用于社区并且没有杂七杂八的影响 确保技术的品牌（商标和标识）得到社区成员的关注和使用，特别强调统一的用户体验和高水平的应用程序兼容性  促进生态系统的发展和演进  评估哪些技术可以纳入云原生计算应用的愿景，鼓励社区交付这样的技术，以及集成它们，且要积极的推进总结进度。 提供一种方法来培养各个部分的通用技术标准  推广底层技术和应用定义和管理方法，途径包括：活动和会议、营销（SEM，直接营销）、培训课程和开发人员认证。 通过使技术可访问和可靠来为社区服务。  旨在通过对参考架构进行明确定义的节奏，为每个组成部分提供完全集成和合格的构建。   CNCF 的价值观 CNCF 会极力遵循以下一些原则：
 快速胜过磨叽，基金会的初衷之一就是让项目快速的发展，从而支持用户能够积极的使用。 开放！ CNCF 是以开放和高度透明为最高准则的，而且是独立于任何的其它团体进行运作的。CNCF根据贡献的内容和优点接受所有的贡献者，且遵循开源的价值观，CNCF输出的技术是可以让所有人使用和受益的，技术社区及其决策应保持高度透明。 公平：CNCF 会极力避免那些不好的影响、不良行为、以及“按需付费”的决策。 强大的技术身份：CNCF 会实现并保持高度的自身技术认同，并将之同步到所有的共享项目中。 清晰的边界：CNCF 制定明确的目标，并在某些情况下，要确定什么不是基金会的目标，并会帮助整个生态系统的运转，让人们理解新创新的重点所在。 可扩展： 能够支持从小型开发人员中心环境到企业和服务提供商规模的所有部署规模。这意味着在某些部署中可能不会部署某些可选组件，但总体设计和体系结构仍应适用。 平台中立：CNCF 所开发的项目并不针对某个特定平台，而是旨在支持各种体系结构和操作系统。  CNCF 的成员 CNCF 设立了白金、黄金、银、最终用户以及学术和非盈利等成员。所有成员申请将由Linux基金会审查，由其决定是否将该申请人归类为最终用户，学术/非营利组织或 出于CNCF成员资格的目的。
 白金会员的权益：  任命一位（1）代表参加CNCF理事会。 指定一名（1）代表作为理事会任何小组委员会或活动中的有表决权的成员。 享受最显眼的展示位置，包括在网站上。 如果该成员也是经批准的最终用户，则最终用户成员的所有权益仍生效  黄金会员的权益：  每五（5）名金牌成员就任命一名（1）代表参加CNCF理事会，最多三（3）名金牌代表。 如果该成员也是经批准的最终用户，则最终用户成员的所有权益仍生效  银牌会员的权益：  每十（10）名白银成员指定一名（1）代表参加CNCF理事会，最多三名银牌代表。 如果该成员也是经批准的最终用户，则最终用户成员的所有权益仍生效  最终用户权益：  参与下面所述的最终用户咨询社区; 提名一（1）名代表到最终用户技术咨询委员会。  学术和非营利成员：学术和非营利类别的参与分别限于学术和非营利机构，需要理事会批准。学术成员和非营利成员有权将其组织认定为支持CNCF使命的成员以及理事会确定的任何其他权利或利益。  CNCF 理事会 CNCF 理事会负责诸如市场以及其它业务监督，以及CNCF的预算等。CNCF 理事会并不过问技术上的任何决策。会与技术监督委员会合作设定CNCF的总体范围。</description>
    </item>
    
    <item>
      <title>关于Linux基金会的简介</title>
      <link>http://www.opensourceway.community/posts/foundation_introduce/linux_foundation_introduce/</link>
      <pubDate>Mon, 09 Apr 2018 16:01:16 +0800</pubDate>
      
      <guid>http://www.opensourceway.community/posts/foundation_introduce/linux_foundation_introduce/</guid>
      <description>开源之道导读 一般的软件公司，尤其是针对2B的企业，都会设置一个叫做市场的部门，这是一个颇让人产生困惑的部门，因为 Marketing 在英文中的意思地营销，你去寻找相关的资料是万万不得的。而其职能往往是诸如对外宣传、举办活动、在社交媒体上和客户互动、撰写所谓的软文、做SEO等等，而公司往往还会设置另外一个部门叫销售部，类似于传统行业的陌拜、客户关系处理、行业客户等等的职能。
让我们先转回到开源领域，很多公司将加入诸如Linux基金会之类的事情，认为是一种市场活动，即Marketing events，反正每年公司都有一些预算的，大家都在加，我不加的话显得不够大气。于是大家纷纷加入，我们来看看2018年Linux基金会的名单（中国大陆境内）：博图纵横、数人云、才云、链链、超算云、招商银行、中信、EasyStack、DaoCloud、房掌柜、金丘股份、众享比特、易健科技、复杂美、谐云科技、趣链科技、Lenovo、橙色魔方、全息互信、雷盈、Rancher、四方精创、点融网、太一、时速云、Thundersoft、联动优势、万达飞凡科技、万向集团、云象、梧桐树、保全网、中国印钞造币、ZTE等等。有很多是我们没有听说过的，但是它会加入基金会，这是件好事情，因为这是Linux基金会的主要收入来源，也是维系Linux内核正常运转的必备。
但是，加入这个基金会的公司真的理解基金会的意义吗？更多的不知道，但是就资质荣誉来讲：可以看到官网、公众号，会将此大肆的做宣传。诸如Linux基金会正式会员、Linux基金会官方合作伙伴、CNCF会员之类的。大约是给自己的顾客看的吧。谁又知道了呢？如果你恰好是上述公司的加入基金会的负责人，不妨给我们留言，说出你的真实感受。
开源之道给出的建议是：加入基金会没错，如果没有真正利用起来开源的优势的话，那几乎就只是一句广告语，没有任何的意义。那么什么是加入基金会的正确“姿势”了呢？
 招聘上游贡献者加入公司 鼓励员工为基金会托管的项目做贡献 结合自己的产品，平衡项目的工程开销 增加公司在项目的技术影响 通过基金会提供的平台，了解自身的客户诉求  总结一句话，就是将钱花在最值得的地方！
简短的说明 Linux基金会致力于围绕开源项目构建可持续的生态系统，以加速技术开发和行业采用。
2000年创立伊始，Linux 通过财务、知识产权、以及基础设施、大中型活动、培训为开源社区提供了不可估量的卓越支持，通过和大家的共同努力，Linux基金会和它所托管的项目，在共享技术的创造领域，打造出成功的且最具前途实力技术。
Linux 的成就 Linux是开源软件项目历史上是规模最大、应用范围最广的！几乎所有行业都在广泛的使用Linux，其中包括金融服务、政府、教育、乃至电影制作等。
同时，Linux 也是支持最前沿技术的首选操作系统，它们有：物联网、云计算、以及大数据。
Linux基金会，作为其创始人 Linus Torvalds和目前的kernel维护的领导者 Greg Kroah-Hartman 的大本营，目标是提供一个中立的团队，从而让Linux内核团队的开发能够得到很好的保护，使其在未来能够加速创新的步伐。
 Linux 在目前互联网上百万个域名中高居95%的使用量 全球有超过85%的智能手机的销售是基于Android，而Android是基于Linux内核的 全世界所有500强超级计算机都运行在Linux上 大多数全球证券交易市场都运行在Linux之上，包括纽约证券交易所，纳斯达克，伦敦证券交易所和东京证券交易所 大多数消费电子设备使用Linux，利用其占用空间小 超过75%的采用云计算的企业称他们使用Linux作为其主要的平台 Linux是支持全球电子商务领导者的首选基础设施，包括亚马逊、eBay、PayPal、沃尔玛以及其他公司  超越Linux Linux基金会利用其支持Linux社区的经验和专业知识来帮助建立，构建和维护一些最关键的开源技术。它所涵盖的内容到今天已经远远的超越了Linux，几乎帮助促进了每一个软件栈的创新。目前Linux基金会所托管的项目，涉及多个层次，如企业IT、嵌入式系统、消费电子、云计算、网络等等。
这些正在高速成长的项目，正在帮助企业重新塑造可能性，其中包括：
 Hyperledger: 跨行业的区块链技术实现 Automotive Grade Linux ：汽车应用的开放式软件平台 Open Network Automation Platform （ONAP）：实时的、策略驱动的软件自动化的网络功能虚拟化平台 Kubernetes：云原生计算基金会（CNCF）下生产级的容器编排平台  历史 Linux 基金会的历史，最早是追溯到1993年由Patrick D&amp;rsquo;Cruze创建的Linux国际邮件列表，即LI，到2000年LI发展为OSDL，从一个民间组织转变为非盈利的基金会。在2003年，Linux的创始人Linus Torvalds宣布加入了OSDL，这样的话Linus就可以全身心的为维护Linux项目和社区而工作了，人们也再也不同担心Linus去哪家厂商了。
在2007年的时候，和Free Standards Group进行了合并，正式成立了Linux基金会，Jim Zemlin 担任首席执行总监，一直到今天。
从此以后，Linux基金会日渐壮大，随着将项目和商业因素的分离，以及开源的日渐繁荣，Linux开展了多项业务，如会议、培训、咨询、子基金会托管、开源项目托管等等。</description>
    </item>
    
    <item>
      <title>Apache 是如何运作的？</title>
      <link>http://www.opensourceway.community/posts/foundation_introduce/how_apache_works/</link>
      <pubDate>Thu, 15 Mar 2018 15:30:38 +0800</pubDate>
      
      <guid>http://www.opensourceway.community/posts/foundation_introduce/how_apache_works/</guid>
      <description>引言 本文将会以概述的形式为读者您提供 Apache 软件基金会的一切内容，相信一定是您一直以来都存有疑问，但还没有来得及细问的内容。涵盖：member 与 committer 的区别、谁决定什么事、选举是如何进行的、基础设施又是如何工作的、董事会又是什么、什么是PMC、孵化器背后的哲学思想又是什么、以及ASF是如何处理多年以来新项目和贡献者的惊人增长所带来的挑战。本文将带你走近 Apache 软件基金会的幕后，一探其背后的运作机理。
Apache 软件基金会是什么？ Apache 软件基金会 是美国注册的503&amp;copy;3 的非营利的公共慈善组织，于1999年成立，目的主要有：
 通过提供硬件、沟通工具以及业务基础架构，从而为开放式协作开发软件项目提供后盾 创立独立的法律实体，这样就可以接受个人或公司的赞助，并能够确保这些资源将用于公共利益 为个人志愿者提供避免针对基金会项目的法律诉讼 保护“apache”的品牌，适用于其软件产品，免遭其他组织滥用  敬告读者，以下内容将会是干巴巴枯燥的事实说明，但是相信很多人对于Apache还是保持好奇的，这一切是如何发生的呢？它的细节究竟是怎么回事? 不过不要着急，让我们先来回味一小段历史。
Apache 软件基金会简史 基金会是在1999年创立的，当时只有几个人，他们给自己起了个名称叫做：“Apache 小组”，之所以这么叫，是因为若干年前他们为了维护和支持当年由NCSA所开发的 HTTPD web 服务。
当年的情形是这样的，HTTPD web服务软件是以自由的方式向大家提供的，不仅包括源代码，还包含一份允许人们自由的修改并进行二次发行的许可协议，但是随着时间的流逝，当年的开发者渐渐的转移了兴趣，开始去忙其他事情了，结果导致的局面就是项目有用户，但是没有人支持。
这是开始有一些用户交换彼此对软件的修复（称之为”补丁”），以及如何修复问题和改进代码的信息，这时，Brian Behlendorf 就在自己的机器上创建了一个邮件列表，从而让大家可以协作去修复bug、维护和改进 HTTPD web服务。
之所以选择 “Apache” 这样一个名称，主要是对美国原住民一个部落的尊敬，Apache部落以其在战争策略方面的卓越技能和无尽的耐力而闻名于世。不过很有意思的是，它也是一个双关语，&amp;rdquo;a patchy web server&amp;rdquo; 即一个修修补补的web服务，但是，说实话，这并不是大家的初衷。就这样，过了没有多久，这些开发和维护Apache软件的人们就自称为&amp;rdquo;Apache 小组&amp;rdquo;了。
从1995到1999年，Apache HTTPD web服务，这个由“Apache小组”所领导开发的web服务器软件成为了市场的领导者，一直持续到现在，即使是现在也占据了市场65%的份额。
但是，世界从未停止发展，随着网络规模的增长，相应的经济利益也得到了发展，Apache 开始托管一些新的相关的项目（如mod_perl项目、php项目、java项目等），越来越需要一个更加连贯和有组织的组织来防范潜在的法律攻击。于是，Apache 基金会应势而生。
你可以阅读更多关于ASF 历史的内容。
精英主义 Apache web 服务器，并不像和其它的在开源许可协议下开发的软件一样，它最初并非是由某位“英雄”（诸如Linux内核、Perl或Python语言）独立发起的，而是由几个拥有共同想法、彼此了解的人，通过交换信息、修修补补、不断接受各方建议而创建的。
随着小组开始开发他们自己的软件版本，抛弃了原来的 NCSA 的版本，越来越多的人被吸引并开始提供帮助，首先通过发送很少的补丁或建议，或者在邮件列表中回复电子邮件，后来则可以提供更重要的贡献。
当小组认为某位开发者，已经“赢得”了成为社区的一员的资格时，他们就授予此开发者对代码仓库的直接访问权限，这样不断的增加团队的力量，也提高了团队开发项目的能力，进而更有效地维护和发展了团队。
我们把这个基本原则称为“精英主义”：从字面上看，这是政府的主要优势或常见称呼。
值得注意的是，这个模式发展的非常好，没有产生太多的摩擦，这是因为和其它的方式不同，在这里权力并没有集中和变得保守，在 Apache 团对中，新人被视为希望提供帮助的志愿者，而不是那些想窃取职位的人。
因为没有那些让人迷惑的资源（金钱、能量、时间），所以Apache团队非常希望有新来的人能够帮忙，他们只是筛选他们认为足够完成这项任务的人，并匹配与他人合作所需的友好态度，特别是在有分歧的时候。
在接下来，我们来看看ASF的组织架构，接着我们再来梳理一下角色。
基金会的组织架构 随着Apache Web Server的市场份额和流行度开始逐步增长，由于其技术优势和项目背后的社区的开放性，人们开始围绕 Apache web server 创建了一些周边的项目。由于他们本身受到了一直以来的社区文化影响，这些周边的项目也采用了相同的社区管理模式。</description>
    </item>
    
  </channel>
</rss>